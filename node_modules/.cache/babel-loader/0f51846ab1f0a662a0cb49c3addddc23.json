{
  "ast": null,
  "code": "var _jsxFileName = \"/var/www/html/Portfolio1/portfolio-1/src/pages/splash/Splash.js\";\nimport React, { Component } from \"react\";\nimport \"./Splash.css\";\nimport { Redirect } from \"react-router-dom\";\nimport LoaderLogo from \"../../components/Loader/LoaderLogo.js\";\n// import ClipLoader from 'react-spinners/ClipLoader'; // Import the spinner\n\nfunction AnimatedSplash(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    style: {\n      backgroundColor: props.theme.splashBg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoaderLogo, {\n    id: \"logo\",\n    theme: props.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ClipLoader, {\n    color: \"#36D7B7\",\n    loading: true,\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), \" \"));\n}\nclass Splash extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n  componentDidMount() {\n    this.id = setTimeout(() => this.setState({\n      redirect: true\n    }), 5500);\n  }\n  componentWillUnmount() {\n    clearTimeout(this.id); // Use componentWillUnmount instead of componentWillMount\n  }\n  render() {\n    return this.state.redirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(AnimatedSplash, {\n      theme: this.props.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    });\n  }\n}\nexport default Splash;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "Component",
      "Redirect",
      "LoaderLogo",
      "AnimatedSplash",
      "props",
      "createElement",
      "className",
      "__self",
      "__source",
      "fileName",
      "_jsxFileName",
      "lineNumber",
      "columnNumber",
      "style",
      "backgroundColor",
      "theme",
      "splashBg",
      "id",
      "ClipLoader",
      "color",
      "loading",
      "size",
      "Splash",
      "constructor",
      "state",
      "redirect",
      "componentDidMount",
      "setTimeout",
      "setState",
      "componentWillUnmount",
      "clearTimeout",
      "render",
      "to"
    ],
    "sources": [
      "/var/www/html/Portfolio1/portfolio-1/src/pages/splash/Splash.js"
    ],
    "sourcesContent": [
      "import React, { Component } from \"react\";\nimport \"./Splash.css\";\nimport { Redirect } from \"react-router-dom\";\nimport LoaderLogo from \"../../components/Loader/LoaderLogo.js\";\n// import ClipLoader from 'react-spinners/ClipLoader'; // Import the spinner\n\nfunction AnimatedSplash(props) {\n  return (\n    <div className=\"logo_wrapper\">\n      <div className=\"screen\" style={{ backgroundColor: props.theme.splashBg }}>\n        <LoaderLogo id=\"logo\" theme={props.theme} />\n        <ClipLoader color=\"#36D7B7\" loading={true} size={50} /> {/* Spinner */}\n      </div>\n    </div>\n  );\n}\n\nclass Splash extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.id = setTimeout(() => this.setState({ redirect: true }), 5500);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id); // Use componentWillUnmount instead of componentWillMount\n  }\n\n  render() {\n    return this.state.redirect ? (\n      <Redirect to=\"/home\" />\n    ) : (\n      <AnimatedSplash theme={this.props.theme} />\n    );\n  }\n}\n\nexport default Splash;\n"
    ],
    "mappings": ";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,uCAAuC;AAC9D;;AAEA,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC7B,oBACEL,KAAA,CAAAM,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3Bb,KAAA,CAAAM,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAACO,KAAK,EAAE;MAAEC,eAAe,EAAEV,KAAK,CAACW,KAAK,CAACC;IAAS,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvEb,KAAA,CAAAM,aAAA,CAACH,UAAU;IAACe,EAAE,EAAC,MAAM;IAACF,KAAK,EAAEX,KAAK,CAACW,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC5Cb,KAAA,CAAAM,aAAA,CAACa,UAAU;IAACC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAE,IAAK;IAACC,IAAI,EAAE,EAAG;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,KACpD,CACF,CAAC;AAEV;AAEA,MAAMU,MAAM,SAAStB,SAAS,CAAC;EAC7BuB,WAAWA,CAACnB,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACoB,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACT,EAAE,GAAGU,UAAU,CAAC,MAAM,IAAI,CAACC,QAAQ,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC,EAAE,IAAI,CAAC;EACrE;EAEAI,oBAAoBA,CAAA,EAAG;IACrBC,YAAY,CAAC,IAAI,CAACb,EAAE,CAAC,CAAC,CAAC;EACzB;EAEAc,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACP,KAAK,CAACC,QAAQ,gBACxB1B,KAAA,CAAAM,aAAA,CAACJ,QAAQ;MAAC+B,EAAE,EAAC,OAAO;MAAAzB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,gBAEvBb,KAAA,CAAAM,aAAA,CAACF,cAAc;MAACY,KAAK,EAAE,IAAI,CAACX,KAAK,CAACW,KAAM;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC3C;EACH;AACF;AAEA,eAAeU,MAAM",
    "ignoreList": []
  },
  "metadata": {},
  "sourceType": "module"
}
